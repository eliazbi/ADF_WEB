{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "el109adf1"
		},
		"ABST1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ABST1'"
		},
		"AmazonS31_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'AmazonS31'"
		},
		"AzureBlobStorage_New_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_New'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"CosmosDbLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbLS'"
		},
		"LS_BLOB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BLOB'"
		},
		"LS_GEN2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_GEN2'"
		},
		"LS_OLAP_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_OLAP'"
		},
		"LS_Parameter_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Parameter'"
		},
		"LS_SALESDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SALESDB'"
		},
		"NewBlobLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'NewBlobLS'"
		},
		"SqlServerOnPrem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerOnPrem'"
		},
		"SqlServerOnPrem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServerOnPrem'"
		},
		"AmazonS31_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAYTSFLVZ5XDJ3SJVA"
		},
		"AzureBlobStorage_SASURI_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStorage_SASURI'"
		},
		"LS_GEN2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://el108dwgen2.dfs.core.windows.net"
		},
		"Snowflake1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Snowflake1'"
		},
		"Snowflake_DWB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Snowflake_DWB'"
		},
		"SqlServerOnPrem_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "BBSAP\\eshaik"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CDCTIMESTAMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TableName,WatermarkValue from watermarktable where TableName = '[dbo].[Orders_Src]'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable34",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select max(OrderDate) as mdate from [dbo].[Orders_Src]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable35",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM [dbo].[Orders_Src] where OrderDate >'@{activity('Lookup1').output.firstRow.WatermarkValue}' AND\nOrderDate <= '@{activity('Lookup2').output.firstRow.mdate}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable36",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable37",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spSetWatermark]",
							"storedProcedureParameters": {
								"TableName": {
									"value": {
										"value": "@activity('Lookup1').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								},
								"NewTime": {
									"value": {
										"value": "@activity('Lookup2').output.firstRow.mdate",
										"type": "Expression"
									},
									"type": "Datetime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SALESDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-29T00:16:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable34')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable35')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable36')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable37')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyS3Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Group3S3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-25T23:57:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Group3S3')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['firstName']"
										},
										"sink": {
											"name": "firstName"
										}
									},
									{
										"source": {
											"path": "$['lastName']"
										},
										"sink": {
											"name": "lastName"
										}
									},
									{
										"source": {
											"path": "$['gender']"
										},
										"sink": {
											"name": "gender"
										}
									},
									{
										"source": {
											"path": "$['age']"
										},
										"sink": {
											"name": "age"
										}
									},
									{
										"source": {
											"path": "$['address']['streetAddress']"
										},
										"sink": {
											"name": "streetAddress"
										}
									},
									{
										"source": {
											"path": "$['address']['city']"
										},
										"sink": {
											"name": "city"
										}
									},
									{
										"source": {
											"path": "$['address']['state']"
										},
										"sink": {
											"name": "state"
										}
									},
									{
										"source": {
											"path": "$['address']['postalCode']"
										},
										"sink": {
											"name": "postalCode"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['type']"
										},
										"sink": {
											"name": "type"
										}
									},
									{
										"source": {
											"path": "$['phoneNumbers'][0]['number']"
										},
										"sink": {
											"name": "number"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable21",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-21T00:01:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable21')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LkpActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().filename",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DelimitedText11",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable7",
											"type": "DatasetReference",
											"parameters": {
												"Tablename": {
													"value": "@item().dbname",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-06T23:35:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText10')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText11')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipelinecopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrderID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesOrderID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "Byte"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "Status",
											"type": "Byte",
											"physicalType": "Byte"
										}
									},
									{
										"source": {
											"name": "OnlineOrderFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OnlineOrderFlag",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PurchaseOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PurchaseOrderNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "ShipToAddressID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShipToAddressID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "BillToAddressID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BillToAddressID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "ShipMethod",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ShipMethod",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CreditCardApprovalCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreditCardApprovalCode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SubTotal",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "SubTotal",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "TotalDue",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TotalDue",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Comment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "Guid"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceSaleOrdHdr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SHDR_OLAP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-24T00:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceSaleOrdHdr')]",
				"[concat(variables('factoryId'), '/datasets/SHDR_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfitLoss')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Fact_ProfitlOSS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SaleordHdr": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-27T00:00:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Fact_ProfitlOSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cn1tocn2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DelimitedText4",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText5",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-02T00:08:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FilterForTxtFiles",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.txt')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterForTxtFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterForTxtFiles').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DelimitedText6",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText7",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterForTxtFiles').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Binary1",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-02T00:37:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText6')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText7')]",
				"[concat(variables('factoryId'), '/datasets/Binary1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_XML1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-07T14:51:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_XML1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineCopy_Acdb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet6",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbSqlApiCollection2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-29T23:59:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet6')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbSqlApiCollection2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLkp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_lKP_NF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Orders": {},
									"EmpLkpTable": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-20T23:26:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_lKP_NF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineStaging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable29",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_parsrc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-26T23:56:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable29')]",
				"[concat(variables('factoryId'), '/datasets/Parquet4')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow_parsrc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineXML')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_XML",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-06T01:06:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_XML')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_AlterRow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SaleOrdSrc": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-25T14:43:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_FiletoTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrderID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesOrderID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RevisionNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RevisionNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrderDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DueDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ShipDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OnlineOrderFlag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OnlineOrderFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PurchaseOrderNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PurchaseOrderNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SalesPersonID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesPersonID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BillToAddressID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BillToAddressID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ShipToAddressID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ShipToAddressID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ShipMethodID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ShipMethodID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CreditCardID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreditCardID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CreditCardApprovalCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreditCardApprovalCode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CurrencyRateID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrencyRateID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SubTotal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubTotal",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxAmt",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Freight",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Freight",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TotalDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalDue",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-26T00:10:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_GIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedText19",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json13",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText19')]",
				"[concat(variables('factoryId'), '/datasets/Json13')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_LKP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataflowLkp",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"LKPTABLE": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-20T00:15:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataflowLkp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_OnPremtoCloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText12",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from ',item().stable)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable11",
											"type": "DatasetReference",
											"parameters": {
												"Tablename": {
													"value": "@item().ttable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-08T23:57:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText12')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable11')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Parameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_Parameter",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.tablenamep",
										"type": "Expression"
									},
									"dbname": {
										"value": "@pipeline().parameters.dbnamep",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText9",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"tablenamep": {
						"type": "string"
					},
					"dbnamep": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-06T00:16:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_Parameter')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable28",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-26T21:42:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable28')]",
				"[concat(variables('factoryId'), '/datasets/Parquet3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Parquet1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText17",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet7",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-07T14:28:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText17')]",
				"[concat(variables('factoryId'), '/datasets/Parquet7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_SCDTY2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCDTYPE2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-04T15:53:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SCDTYPE2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_SNOWFLAKECOPY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeSink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage_SASURI",
									"type": "LinkedServiceReference"
								},
								"path": "cn1"
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable10",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTable7",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-07T00:38:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable10')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable7')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_SASURI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Switch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.Con",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "cn2",
									"activities": [
										{
											"name": "Copy data1",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobStorageWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "Json7",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "Json11",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								},
								{
									"value": "cn3",
									"activities": [
										{
											"name": "Copy data2",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobStorageWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "Json7",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "Json8",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								},
								{
									"value": "cn4",
									"activities": [
										{
											"name": "Copy data3",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobStorageWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "Json7",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "Json9",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Copy data4",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Json7",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Json10",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"Con": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Training"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-25T14:01:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json7')]",
				"[concat(variables('factoryId'), '/datasets/Json10')]",
				"[concat(variables('factoryId'), '/datasets/Json11')]",
				"[concat(variables('factoryId'), '/datasets/Json8')]",
				"[concat(variables('factoryId'), '/datasets/Json9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_UntilActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('UntilFlag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "select ZSTATUS as STS from [dbo].[Ztgr]\nwhere id = 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable24",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output.firstRow.STS,'Y')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "UntilFlag",
													"value": "True"
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText15",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"UntilFlag": {
						"type": "String",
						"defaultValue": "False"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-04-25T13:42:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText15')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable24')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": "Saleorder"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderDate",
						"type": "varchar"
					},
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "Freight",
						"type": "varchar"
					},
					{
						"name": "OrderID",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "RequiredDate",
						"type": "varchar"
					},
					{
						"name": "ShippedDate",
						"type": "varchar"
					},
					{
						"name": "ShipVia",
						"type": "varchar"
					},
					{
						"name": "ShipName",
						"type": "varchar"
					},
					{
						"name": "ShipAddress",
						"type": "varchar"
					},
					{
						"name": "ShipCity",
						"type": "varchar"
					},
					{
						"name": "ShipRegion",
						"type": "varchar"
					},
					{
						"name": "ShipPostalCode",
						"type": "varchar"
					},
					{
						"name": "ShipCountry",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Group1Sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().Tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable12')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Src"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable13')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Tar"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable14')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "LKP_TAB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable15')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Tar"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable16')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequiredDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShippedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipVia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ShipName",
						"type": "nvarchar"
					},
					{
						"name": "ShipAddress",
						"type": "nvarchar"
					},
					{
						"name": "ShipCity",
						"type": "nvarchar"
					},
					{
						"name": "ShipRegion",
						"type": "nvarchar"
					},
					{
						"name": "ShipPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ShipCountry",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable17')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "TitleOfCourtesy",
						"type": "nvarchar"
					},
					{
						"name": "BirthDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "HireDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Address",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "HomePhone",
						"type": "nvarchar"
					},
					{
						"name": "Extension",
						"type": "nvarchar"
					},
					{
						"name": "Notes",
						"type": "nvarchar"
					},
					{
						"name": "ReportsTo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable18')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "Orders_Lkp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable19')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OnlineOrderFlag",
						"type": "bit"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipMethod",
						"type": "nvarchar"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "varchar"
					},
					{
						"name": "SubTotal",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderHeader"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable20')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": "JsonTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": "jsontable1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable22')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "JsonTable3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable23')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "JsonFlatten"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable24')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable25')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Src"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable26')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Tar"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable27')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": "HealthPar"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable28')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable29')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OnlineOrderFlag",
						"type": "bit"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipMethod",
						"type": "nvarchar"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "varchar"
					},
					{
						"name": "SubTotal",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderHeader"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable30')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "ParquetFileTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable31')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Src"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable32')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Tar"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable33')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "FactSid"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable34')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable35')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable36')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable37')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Tar"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable38')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable39')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "acdb"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable40')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable41')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Tar"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable42')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Employeeid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "DEPT",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "STARTDate",
						"type": "date"
					},
					{
						"name": "ENDDATEDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable43')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Employeeid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "DEPT",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "STARTDate",
						"type": "date"
					},
					{
						"name": "ENDDATEDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable44')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Employeeid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "DEPT",
						"type": "nvarchar"
					},
					{
						"name": "STARTDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmployeeSrc"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable45')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Employeeid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "DEPT",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "STARTDate",
						"type": "date"
					},
					{
						"name": "ENDDATEDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable46')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "Xmldata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable47')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequiredDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShippedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipVia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ShipName",
						"type": "nvarchar"
					},
					{
						"name": "ShipAddress",
						"type": "nvarchar"
					},
					{
						"name": "ShipCity",
						"type": "nvarchar"
					},
					{
						"name": "ShipRegion",
						"type": "nvarchar"
					},
					{
						"name": "ShipPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ShipCountry",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_NW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "casetest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().Tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequiredDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShippedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipVia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ShipName",
						"type": "nvarchar"
					},
					{
						"name": "ShipAddress",
						"type": "nvarchar"
					},
					{
						"name": "ShipCity",
						"type": "nvarchar"
					},
					{
						"name": "ShipRegion",
						"type": "nvarchar"
					},
					{
						"name": "ShipPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ShipCountry",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_NW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "ZTEST1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "SalesProcess"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "JsonCon"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"CustomerID": {
							"type": "integer"
						},
						"NameStyle": {
							"type": "boolean"
						},
						"Title": {
							"type": "string"
						},
						"FirstName": {
							"type": "string"
						},
						"MiddleName": {
							"type": "string"
						},
						"LastName": {
							"type": "string"
						},
						"Suffix": {
							"type": "string"
						},
						"CompanyName": {
							"type": "string"
						},
						"SalesPerson": {
							"type": "string"
						},
						"EmailAddress": {
							"type": "string"
						},
						"Phone": {
							"type": "string"
						},
						"PasswordHash": {
							"type": "string"
						},
						"PasswordSalt": {
							"type": "string"
						},
						"rowguid": {
							"type": "string"
						},
						"ModifiedDate": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "SalesProcess"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								},
								"postalCode": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						},
						"SalesOrderID": {
							"type": "integer"
						},
						"RevisionNumber": {
							"type": "integer"
						},
						"OrderDate": {
							"type": "string"
						},
						"DueDate": {
							"type": "string"
						},
						"ShipDate": {
							"type": "string"
						},
						"Status": {
							"type": "integer"
						},
						"OnlineOrderFlag": {
							"type": "boolean"
						},
						"SalesOrderNumber": {
							"type": "string"
						},
						"PurchaseOrderNumber": {
							"type": "string"
						},
						"AccountNumber": {
							"type": "string"
						},
						"CustomerID": {
							"type": "integer"
						},
						"ShipToAddressID": {
							"type": "integer"
						},
						"BillToAddressID": {
							"type": "integer"
						},
						"ShipMethod": {
							"type": "string"
						},
						"CreditCardApprovalCode": {
							"type": "null"
						},
						"SubTotal": {
							"type": "number"
						},
						"TaxAmt": {
							"type": "number"
						},
						"Freight": {
							"type": "number"
						},
						"TotalDue": {
							"type": "number"
						},
						"Comment": {
							"type": "null"
						},
						"rowguid": {
							"type": "string"
						},
						"ModifiedDate": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "JsonCon"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_Parameter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Parameter",
					"type": "LinkedServiceReference",
					"parameters": {
						"Db_Name": {
							"value": "@dataset().dbname",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"dbname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Parameter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sno",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "dbname",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "lookupfile.csv",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sno",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "dbname",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sno",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "dbname",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText12')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "lkptablefile.txt",
						"container": "cn2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sno",
						"type": "String"
					},
					{
						"name": "stable",
						"type": "String"
					},
					{
						"name": "ttable",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText13')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Actual.csv",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "dno",
						"type": "String"
					},
					{
						"name": "Dname",
						"type": "String"
					},
					{
						"name": "financial year",
						"type": "String"
					},
					{
						"name": "quarter",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText14')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "planned.csv",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "dno",
						"type": "String"
					},
					{
						"name": "Dname",
						"type": "String"
					},
					{
						"name": "financial year",
						"type": "String"
					},
					{
						"name": "quarter",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText15')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cdc2.parquet",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PAR1\u0015\u0000\u0015��\u0001\u0015��\u0001",
						"type": "String"
					},
					{
						"name": "\u0015�\u001f\u0015\u0000\u0015\u0006\u0015\u0006\u001c\u0018\u0001I\u0018\u0001I\u0016\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000�\u001f\u0001\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0000I&�\u0001\u001c\u0015\f\u0019%\u0000\u0006\u0019\u0018\u0002Op\u0015\u0000\u0016�\u001f\u0016�\u0001\u0016�\u0001&\b\u0016\u0000",
						"type": "String"
					},
					{
						"name": "6\u0000(\u0001I\u0018\u0001I\u0000\u0000\u0000\u0015\u0000\u0015��\u0003\u0015��\u0003",
						"type": "String"
					},
					{
						"name": "\u0015�\u001f\u0015\u0000\u0015\u0006\u0015\u0006\u001c\u0018\u000b9975.363636\u0018\u000b100144.9444\u0016\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000�\u001f\u0001\u0005\u0000\u0000\u000020800\u0007\u0000\u0000\u000024943.8\u000b\u0000\u0000\u000048895.66667\u000b\u0000\u0000\u000037104.77273\u000b\u0000\u0000\u000023262.13889\u000b\u0000\u0000\u000023434.51613\u000b\u0000\u0000\u000071576.05882\u000b\u0000\u0000\u000048402.45455\u000b\u0000\u0000\u000028176.28571\u000b\u0000\u0000\u000056583.58333\u000b\u0000\u0000\u000048476.90909\u000b\u0000\u0000\u000020443.92308\u000b\u0000\u0000\u000021877.23077\u000b\u0000\u0000\u000033072.57895\b\u0000\u0000\u000044136.08\u000b\u0000\u0000\u000027496.71429\u000b\u0000\u0000\u000027392.08333\u0007\u0000\u0000\u000035969.2\u0007\u0000\u0000\u000019599.5\b\u0000\u0000\u000037723.84\u0007\u0000\u0000\u000019556.4\u000b\u0000\u0000\u000025488.91667\b\u0000\u0000\u000023300.15\u000b\u0000\u0000\u000038143.05882\u000b\u0000\u0000\u000040724.57143\u000b\u0000\u0000\u000017069.47826\u000b\u0000\u0000\u000024806.91667\u000b\u0000\u0000\u000027740.21739\u000b\u0000\u0000\u000026615.27273\u000b\u0000\u0000\u000031341.90476\u000b\u0000\u0000\u000024873.71429\u000b\u0000\u0000\u000022647.58333\u000b\u0000\u0000\u000022989.21429\u000b\u0000\u0000\u000029806.69231\u0007\u0000\u0000\u000026982.4\u000b\u0000\u0000\u000012040.95238\u0007\u0000\u0000\u000010418.5\u000b\u0000\u0000\u000017291.59259\u000b\u0000\u0000\u000013639.02899\u000b\u0000\u0000\u000016685.32727\b\u0000\u0000\u00006127.125\u000b\u0000\u0000\u00009150.416667\u000b\u0000\u0000\u000019126.41071\u000b\u0000\u0000\u00008294.333333\u000b\u0000\u0000\u000014896.66667\u000b\u0000\u0000\u000014249.47368\u000b\u0000\u0000\u000014036.53846\u0007\u0000\u0000\u000022322.7\u000b\u0000\u0000\u000012400.16667\u0007\u0000\u0000\u000015297.8\u000b\u0000\u0000\u000019631.86207\u000b\u0000\u0000\u000019655.10345\u000b\u0000\u0000\u000022023.41667\u000b\u0000\u0000\u000014392.96667\u000b\u0000\u0000\u000012794.90909",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText16')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABST1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EMP.csv",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "DEPT",
						"type": "String"
					},
					{
						"name": "STARTDATE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABST1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText17')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_New",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EMP.csv",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "DEPT",
						"type": "String"
					},
					{
						"name": "STARTDATE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText18')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_New",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "DEPT",
						"type": "String"
					},
					{
						"name": "STARTDATE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText19')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_New",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EMP.csv",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "DEPT",
						"type": "String"
					},
					{
						"name": "STARTDATE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Saleorder.txt",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "String"
					},
					{
						"name": "RevisionNumber",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "DueDate",
						"type": "String"
					},
					{
						"name": "ShipDate",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "OnlineOrderFlag",
						"type": "String"
					},
					{
						"name": "SalesOrderNumber",
						"type": "String"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "String"
					},
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "SalesPersonID",
						"type": "String"
					},
					{
						"name": "TerritoryID",
						"type": "String"
					},
					{
						"name": "BillToAddressID",
						"type": "String"
					},
					{
						"name": "ShipToAddressID",
						"type": "String"
					},
					{
						"name": "ShipMethodID",
						"type": "String"
					},
					{
						"name": "CreditCardID",
						"type": "String"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "String"
					},
					{
						"name": "CurrencyRateID",
						"type": "String"
					},
					{
						"name": "SubTotal",
						"type": "String"
					},
					{
						"name": "TaxAmt",
						"type": "String"
					},
					{
						"name": "Freight",
						"type": "String"
					},
					{
						"name": "TotalDue",
						"type": "String"
					},
					{
						"name": "Comment",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sno",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "dbname",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sno",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "dbname",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cn2adls"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sno",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "dbname",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Group3S3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AmazonS31",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "elsf",
						"fileName": "Group3.txt"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "RequiredDate",
						"type": "String"
					},
					{
						"name": "ShippedDate",
						"type": "String"
					},
					{
						"name": "ShipVia",
						"type": "String"
					},
					{
						"name": "Freight",
						"type": "String"
					},
					{
						"name": "ShipName",
						"type": "String"
					},
					{
						"name": "ShipAddress",
						"type": "String"
					},
					{
						"name": "ShipCity",
						"type": "String"
					},
					{
						"name": "ShipRegion",
						"type": "String"
					},
					{
						"name": "ShipPostalCode",
						"type": "String"
					},
					{
						"name": "ShipCountry",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AmazonS31')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn5"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn2"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json12')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sample-json-file.json",
						"container": "cn2"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								},
								"postalCode": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json13')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_New",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sample-JSON-file-with-multiple-records-download.json",
						"container": "cn1"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"users": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"userId": {
										"type": "integer"
									},
									"firstName": {
										"type": "string"
									},
									"lastName": {
										"type": "string"
									},
									"phoneNumber": {
										"type": "string"
									},
									"emailAddress": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sample-json-file.json",
						"container": "cn1"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								},
								"postalCode": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sample-JSON-file-with-multiple-records-download.json",
						"container": "cn1"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"users": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"userId": {
										"type": "integer"
									},
									"firstName": {
										"type": "string"
									},
									"lastName": {
										"type": "string"
									},
									"phoneNumber": {
										"type": "string"
									},
									"emailAddress": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sample-json-file.json",
						"container": "cn1"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								},
								"postalCode": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Test.json",
						"container": "cn1"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Name": {
							"type": "string"
						},
						"Mobile": {
							"type": "integer"
						},
						"Boolean": {
							"type": "boolean"
						},
						"Pets": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sample-json-file.json",
						"container": "cn1"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstName": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"address": {
							"type": "object",
							"properties": {
								"streetAddress": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"state": {
									"type": "string"
								},
								"postalCode": {
									"type": "string"
								}
							}
						},
						"phoneNumbers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"number": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn3"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn4"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn2"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "health.parquet",
						"container": "cn3"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "average_covered_charges",
						"type": "UTF8"
					},
					{
						"name": "average_total_payments",
						"type": "UTF8"
					},
					{
						"name": "total_discharges",
						"type": "UTF8"
					},
					{
						"name": "PERCENT_Bachelor's_or_Higher",
						"type": "UTF8"
					},
					{
						"name": "percent_hs_grad_or_higher",
						"type": "UTF8"
					},
					{
						"name": "total_payments",
						"type": "UTF8"
					},
					{
						"name": "percent_reimbursement",
						"type": "UTF8"
					},
					{
						"name": "total_covered_charges",
						"type": "UTF8"
					},
					{
						"name": "referral_region_provider_name",
						"type": "UTF8"
					},
					{
						"name": "reimbursement_percentage",
						"type": "UTF8"
					},
					{
						"name": "drg_definition",
						"type": "UTF8"
					},
					{
						"name": "referral_region",
						"type": "UTF8"
					},
					{
						"name": "income_per_capita",
						"type": "UTF8"
					},
					{
						"name": "median_earnings_bachelors",
						"type": "UTF8"
					},
					{
						"name": "median_earnings_graduate",
						"type": "UTF8"
					},
					{
						"name": "median_earnings_hs_grad",
						"type": "UTF8"
					},
					{
						"name": "median_earnings_less_than_hs",
						"type": "UTF8"
					},
					{
						"name": "median_family_income",
						"type": "UTF8"
					},
					{
						"name": "number_of_records",
						"type": "UTF8"
					},
					{
						"name": "pop_25_over",
						"type": "UTF8"
					},
					{
						"name": "provider_city",
						"type": "UTF8"
					},
					{
						"name": "provider_id",
						"type": "UTF8"
					},
					{
						"name": "provider_name",
						"type": "UTF8"
					},
					{
						"name": "provider_state",
						"type": "UTF8"
					},
					{
						"name": "provider_street_address",
						"type": "UTF8"
					},
					{
						"name": "provider_zip_code",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn2"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SalesLT.SalesOrderHeader.parquet",
						"container": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "INT32"
					},
					{
						"name": "RevisionNumber",
						"type": "INT32"
					},
					{
						"name": "OrderDate",
						"type": "INT96"
					},
					{
						"name": "DueDate",
						"type": "INT96"
					},
					{
						"name": "ShipDate",
						"type": "INT96"
					},
					{
						"name": "Status",
						"type": "INT32"
					},
					{
						"name": "OnlineOrderFlag",
						"type": "BOOLEAN"
					},
					{
						"name": "SalesOrderNumber",
						"type": "UTF8"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "UTF8"
					},
					{
						"name": "AccountNumber",
						"type": "UTF8"
					},
					{
						"name": "CustomerID",
						"type": "INT32"
					},
					{
						"name": "ShipToAddressID",
						"type": "INT32"
					},
					{
						"name": "BillToAddressID",
						"type": "INT32"
					},
					{
						"name": "ShipMethod",
						"type": "UTF8"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "UTF8"
					},
					{
						"name": "SubTotal",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "UTF8"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SalesLT.SalesOrderHeader.parquet",
						"container": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "INT32"
					},
					{
						"name": "RevisionNumber",
						"type": "INT32"
					},
					{
						"name": "OrderDate",
						"type": "INT96"
					},
					{
						"name": "DueDate",
						"type": "INT96"
					},
					{
						"name": "ShipDate",
						"type": "INT96"
					},
					{
						"name": "Status",
						"type": "INT32"
					},
					{
						"name": "OnlineOrderFlag",
						"type": "BOOLEAN"
					},
					{
						"name": "SalesOrderNumber",
						"type": "UTF8"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "UTF8"
					},
					{
						"name": "AccountNumber",
						"type": "UTF8"
					},
					{
						"name": "CustomerID",
						"type": "INT32"
					},
					{
						"name": "ShipToAddressID",
						"type": "INT32"
					},
					{
						"name": "BillToAddressID",
						"type": "INT32"
					},
					{
						"name": "ShipMethod",
						"type": "UTF8"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "UTF8"
					},
					{
						"name": "SubTotal",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "UTF8"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_New",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cn1"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Op",
						"type": "UTF8"
					},
					{
						"name": "average_covered_charges",
						"type": "UTF8"
					},
					{
						"name": "average_total_payments",
						"type": "UTF8"
					},
					{
						"name": "total_discharges",
						"type": "UTF8"
					},
					{
						"name": "PERCENT_Bachelor's_or_Higher",
						"type": "UTF8"
					},
					{
						"name": "percent_hs_grad_or_higher",
						"type": "UTF8"
					},
					{
						"name": "total_payments",
						"type": "UTF8"
					},
					{
						"name": "percent_reimbursement",
						"type": "UTF8"
					},
					{
						"name": "total_covered_charges",
						"type": "UTF8"
					},
					{
						"name": "referral_region_provider_name",
						"type": "UTF8"
					},
					{
						"name": "reimbursement_percentage",
						"type": "UTF8"
					},
					{
						"name": "drg_definition",
						"type": "UTF8"
					},
					{
						"name": "referral_region",
						"type": "UTF8"
					},
					{
						"name": "income_per_capita",
						"type": "UTF8"
					},
					{
						"name": "median_earnings_bachelors",
						"type": "UTF8"
					},
					{
						"name": "median_earnings_graduate",
						"type": "UTF8"
					},
					{
						"name": "median_earnings_hs_grad",
						"type": "UTF8"
					},
					{
						"name": "median_earnings_less_than_hs",
						"type": "UTF8"
					},
					{
						"name": "median_family_income",
						"type": "UTF8"
					},
					{
						"name": "number_of_records",
						"type": "UTF8"
					},
					{
						"name": "pop_25_over",
						"type": "UTF8"
					},
					{
						"name": "provider_city",
						"type": "UTF8"
					},
					{
						"name": "provider_id",
						"type": "UTF8"
					},
					{
						"name": "provider_name",
						"type": "UTF8"
					},
					{
						"name": "provider_state",
						"type": "UTF8"
					},
					{
						"name": "provider_street_address",
						"type": "UTF8"
					},
					{
						"name": "provider_zip_code",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_New",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHDR_OLAP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OLAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "SaleOrdHdr"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OLAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SaleordHdr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OnlineOrderFlag",
						"type": "bit"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipMethod",
						"type": "nvarchar"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "varchar"
					},
					{
						"name": "SubTotal",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderHeader"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_DWB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SaleFact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_DWB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_DWB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SalesFactBranch"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_DWB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_DWB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "Public",
					"table": "SaleitemProductFact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_DWB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_DWB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "Group1sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_DWB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_DWB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "Group2sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_DWB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_DWB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "GROUP3SALES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_DWB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_DWB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "Group1Test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_DWB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceSaleOrdHdr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OnlineOrderFlag",
						"type": "bit"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipMethod",
						"type": "nvarchar"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "varchar"
					},
					{
						"name": "SubTotal",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderHeader"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerOnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerOnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequiredDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShippedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipVia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ShipName",
						"type": "nvarchar"
					},
					{
						"name": "ShipAddress",
						"type": "nvarchar"
					},
					{
						"name": "ShipCity",
						"type": "nvarchar"
					},
					{
						"name": "ShipRegion",
						"type": "nvarchar"
					},
					{
						"name": "ShipPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ShipCountry",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Xml2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NewBlobLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BOOKS.XML",
						"container": "cn1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NewBlobLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Xml3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_New",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BOOKS.XML",
						"container": "cn1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Xml4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_New",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BOOKS.XML",
						"container": "cn1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABST1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ABST1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonS31')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "",
					"accessKeyId": "[parameters('AmazonS31_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('AmazonS31_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_New')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_New_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_SASURI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStorage_SASURI_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BLOB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BLOB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_GEN2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_GEN2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_GEN2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_OLAP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_OLAP_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Parameter')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Db_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_Parameter_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SALESDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SALESDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewBlobLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('NewBlobLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"connectionString": "[parameters('Snowflake1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_DWB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"connectionString": "[parameters('Snowflake_DWB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerOnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerOnPrem_connectionString')]",
					"userName": "[parameters('SqlServerOnPrem_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServerOnPrem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BranchTr')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "SaleordHdr"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "SaleOrdItem"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable4",
								"type": "DatasetReference"
							},
							"name": "Product"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SnowflakeTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText8",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "SnowflakeTable3",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tSalesOrderID as integer,\n\t\tRevisionNumber as integer,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp,\n\t\tStatus as integer,\n\t\tOnlineOrderFlag as boolean,\n\t\tSalesOrderNumber as string,\n\t\tPurchaseOrderNumber as string,\n\t\tAccountNumber as string,\n\t\tCustomerID as integer,\n\t\tShipToAddressID as integer,\n\t\tBillToAddressID as integer,\n\t\tShipMethod as string,\n\t\tCreditCardApprovalCode as string,\n\t\tSubTotal as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tTotalDue as decimal(19,4),\n\t\tComment as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SaleordHdr\nsource(output(\n\t\tSalesOrderID as integer,\n\t\tSalesOrderDetailID as integer,\n\t\tOrderQty as integer,\n\t\tProductID as integer,\n\t\tUnitPrice as decimal(19,4),\n\t\tUnitPriceDiscount as decimal(19,4),\n\t\tLineTotal as decimal(38,6),\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SaleOrdItem\nsource(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Product\nSaleordHdr, SaleOrdItem join(SaleordHdr@SalesOrderID == SaleOrdItem@SalesOrderID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nSaleOrdItem, Product join(SaleOrdItem@ProductID == Product@ProductID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2\nJoin1 derive(Year = year(OrderDate),\n\t\tMonth = month(OrderDate)) ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(CustomerID,\n\t\tYear,\n\t\tMonth,\n\t\tProductID),\n\tTotalAmt = sum(SubTotal),\n\t\tTotalTax = sum(TaxAmt)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstageInsert: true) ~> sink1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SalesFact.txt'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nJoin2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstageInsert: true) ~> sink3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable4')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText8')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowLkp')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable12",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable13",
								"type": "DatasetReference"
							},
							"name": "LKPTABLE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable15",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tFreight as decimal(19,4),\n\t\tOrderDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tFreight as decimal(19,4),\n\t\tOrderDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> LKPTABLE\nLKPTABLE select(mapColumn(\n\t\tLKP_OrderID = OrderID,\n\t\tLKP_CustomerID = CustomerID,\n\t\tLKP_Freight = Freight,\n\t\tLKP_OrderDate = OrderDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsource1, Select1 lookup(OrderID == LKP_OrderID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 filter(isNull(LKP_OrderID)) ~> Filter1\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tFreight as decimal(19,4),\n\t\tOrderDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tOrderID,\n\t\tCustomerID,\n\t\tFreight,\n\t\tOrderDate\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable12')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable13')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable15')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fact_ProfitlOSS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SaleordHdr",
								"type": "DatasetReference"
							},
							"name": "SaleordHdr"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SnowflakeTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "YearMonth"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tSalesOrderID as integer,\n\t\tRevisionNumber as integer,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp,\n\t\tStatus as integer,\n\t\tOnlineOrderFlag as boolean,\n\t\tSalesOrderNumber as string,\n\t\tPurchaseOrderNumber as string,\n\t\tAccountNumber as string,\n\t\tCustomerID as integer,\n\t\tShipToAddressID as integer,\n\t\tBillToAddressID as integer,\n\t\tShipMethod as string,\n\t\tCreditCardApprovalCode as string,\n\t\tSubTotal as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tTotalDue as decimal(19,4),\n\t\tComment as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SaleordHdr\nSaleordHdr derive(Year = year(OrderDate),\n\t\tMonth = month(OrderDate)) ~> YearMonth\nYearMonth aggregate(groupBy(CustomerID,\n\t\tYear,\n\t\tMonth),\n\tTotalAmount = sum(SubTotal),\n\t\tTotalFreight = sum(Freight),\n\t\tTotalTax = sum(TaxAmt),\n\t\tTotalDue = sum(TotalDue)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstageInsert: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SaleordHdr')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonFileSource')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json6",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable23",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tMobile as string,\n\t\tBoolean as boolean,\n\t\tPets as string[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'singleDocument') ~> source1\nsource1 foldDown(unroll(Pets, Pets),\n\tmapColumn(\n\t\tName,\n\t\tMobile,\n\t\tBoolean,\n\t\tPets\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json6')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable23')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCDTYPE2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable44",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable42",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable43",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable45",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Exists1"
						},
						{
							"name": "SetoActive"
						},
						{
							"name": "Exists2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tEmployeeid as integer,\n\t\tName as string,\n\t\tDEPT as string,\n\t\tSTARTDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tEmployeeid as integer,\n\t\tName as string,\n\t\tDEPT as string,\n\t\tACTIVE as integer,\n\t\tSTARTDate as date,\n\t\tENDDATEDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1 derive(HASHKEY_INPUT = md5(Name,DEPT)) ~> DerivedColumn1\nsource2 derive(Hash_Tablekey = md5(Name,DEPT)) ~> DerivedColumn2\nDerivedColumn1, DerivedColumn2 exists(HASHKEY_INPUT == Hash_Tablekey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists1\nExists1 derive(ACTIVE = 1,\n\t\tENDDATEDate = toDate('9999-12-31')) ~> SetoActive\nDerivedColumn2, SetoActive exists(source2@Employeeid == source1@Employeeid\n\t&& source2@Name == source1@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists2\nExists2 derive(ENDDATEDate = toDate(currentUTC()),\n\t\tACTIVE = 0) ~> DerivedColumn3\nDerivedColumn3 alterRow(updateIf(true())) ~> AlterRow1\nSetoActive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEmployeeid as integer,\n\t\tName as string,\n\t\tDEPT as string,\n\t\tACTIVE as integer,\n\t\tSTARTDate as date,\n\t\tENDDATEDate as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tEmployeeid,\n\t\tName,\n\t\tDEPT,\n\t\tACTIVE,\n\t\tSTARTDate,\n\t\tENDDATEDate\n\t)) ~> sink1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEmployeeid as integer,\n\t\tName as string,\n\t\tDEPT as string,\n\t\tACTIVE as integer,\n\t\tSTARTDate as date,\n\t\tENDDATEDate as date\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Employeeid','Name','DEPT'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tEmployeeid,\n\t\tName,\n\t\tDEPT,\n\t\tACTIVE,\n\t\tSTARTDate,\n\t\tENDDATEDate\n\t)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable44')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable42')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable43')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable45')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable25",
								"type": "DatasetReference"
							},
							"name": "SaleOrdSrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable26",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tFreight as decimal(19,4),\n\t\tOrderDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SaleOrdSrc\nSaleOrdSrc alterRow(deleteIf(isNull(OrderID)),\n\tupsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tFreight as decimal(19,4),\n\t\tOrderDate as timestamp\n\t),\n\tdeletable:true,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['OrderID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tOrderID,\n\t\tCustomerID,\n\t\tFreight,\n\t\tOrderDate\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable25')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable26')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowACDB')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CosmosDbSqlApiCollection3",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable39",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tCustomerID as string,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'document') ~> source1\nsource1 derive(FullName = concat(FirstName, LastName)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosDbSqlApiCollection3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable39')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowDL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable40",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable41",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tFreight as decimal(19,4),\n\t\tOrderDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM [dbo].[Orders_Src]',\n\tformat: 'query') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tFreight as decimal(19,4),\n\t\tOrderDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable40')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable41')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_XML')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Xml2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable46",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						}
					],
					"script": "source(output(\n\t\tRoot as ({@xmlns} as string, {@xmlns:xsi} as string, {@xsi:schemaLocation} as string, catalog as (book as ({@id} as string, author as string, genre as string, price as double, publish_date as date, title as string)[]))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'test',\n\tvalidationMode: 'none',\n\tnamespaces: false) ~> source1\nsource1 foldDown(unroll(Root.catalog.book),\n\tmapColumn(\n\t\t{@xmlns} = Root.{@xmlns},\n\t\t{@xmlns:xsi} = Root.{@xmlns:xsi},\n\t\t{@xsi:schemaLocation} = Root.{@xsi:schemaLocation},\n\t\t{@id} = Root.catalog.book.{@id},\n\t\tauthor = Root.catalog.book.author,\n\t\tgenre = Root.catalog.book.genre,\n\t\tprice = Root.catalog.book.price,\n\t\tpublish_date = Root.catalog.book.publish_date,\n\t\ttitle = Root.catalog.book.title\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{@xmlns},\n\t\t{@xmlns:xsi},\n\t\t{@xsi:schemaLocation},\n\t\t{@id},\n\t\tauthor,\n\t\tgenre,\n\t\tprice,\n\t\tpublish_date,\n\t\ttitle\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Xml2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable46')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_XML1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Xml4",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText18",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						}
					],
					"script": "source(output(\n\t\t{urn:Test.Namespace,Root} as ({urn:Test.Namespace,catalog} as ({urn:Test.Namespace,book} as ({@id} as string, {urn:Test.Namespace,author} as string, {urn:Test.Namespace,genre} as string, {urn:Test.Namespace,price} as double, {urn:Test.Namespace,publish_date} as date, {urn:Test.Namespace,title} as string)[]))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tvalidationMode: 'none',\n\tnamespaces: true) ~> source1\nsource1 foldDown(unroll({urn:Test.Namespace,Root}.{urn:Test.Namespace,catalog}.{urn:Test.Namespace,book}),\n\tmapColumn(\n\t\t{@id} = {urn:Test.Namespace,Root}.{urn:Test.Namespace,catalog}.{urn:Test.Namespace,book}.{@id},\n\t\t{urn:Test.Namespace,author} = {urn:Test.Namespace,Root}.{urn:Test.Namespace,catalog}.{urn:Test.Namespace,book}.{urn:Test.Namespace,author},\n\t\t{urn:Test.Namespace,genre} = {urn:Test.Namespace,Root}.{urn:Test.Namespace,catalog}.{urn:Test.Namespace,book}.{urn:Test.Namespace,genre},\n\t\t{urn:Test.Namespace,price} = {urn:Test.Namespace,Root}.{urn:Test.Namespace,catalog}.{urn:Test.Namespace,book}.{urn:Test.Namespace,price},\n\t\t{urn:Test.Namespace,publish_date} = {urn:Test.Namespace,Root}.{urn:Test.Namespace,catalog}.{urn:Test.Namespace,book}.{urn:Test.Namespace,publish_date},\n\t\t{urn:Test.Namespace,title} = {urn:Test.Namespace,Root}.{urn:Test.Namespace,catalog}.{urn:Test.Namespace,book}.{urn:Test.Namespace,title}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID as string,\n\t\tNAME as string,\n\t\tDEPT as string,\n\t\tSTARTDATE as string\n\t),\n\tpartitionFileNames:['BooksXmldata'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Xml4')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText18')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_cs')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable8",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SnowflakeTable4",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "SnowflakeTable5",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "SnowflakeTable6",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tEmployeeID as integer,\n\t\tOrderDate as timestamp,\n\t\tRequiredDate as timestamp,\n\t\tShippedDate as timestamp,\n\t\tShipVia as integer,\n\t\tFreight as decimal(19,4),\n\t\tShipName as string,\n\t\tShipAddress as string,\n\t\tShipCity as string,\n\t\tShipRegion as string,\n\t\tShipPostalCode as string,\n\t\tShipCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 split(EmployeeID>=1 && EmployeeID<=3,\n\tEmployeeID>=4 && EmployeeID<=6,\n\tdisjoint: false) ~> ConditionalSplit1@(Group1, Group2, Group3)\nConditionalSplit1@Group1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstageInsert: true) ~> sink1\nConditionalSplit1@Group2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstageInsert: true) ~> sink2\nConditionalSplit1@Group3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstageInsert: true) ~> sink3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable8')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable4')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable5')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_lKP_NF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable16",
								"type": "DatasetReference"
							},
							"name": "Orders"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable17",
								"type": "DatasetReference"
							},
							"name": "EmpLkpTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable18",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Lookup1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tEmployeeID as integer,\n\t\tOrderDate as timestamp,\n\t\tRequiredDate as timestamp,\n\t\tShippedDate as timestamp,\n\t\tShipVia as integer,\n\t\tFreight as decimal(19,4),\n\t\tShipName as string,\n\t\tShipAddress as string,\n\t\tShipCity as string,\n\t\tShipRegion as string,\n\t\tShipPostalCode as string,\n\t\tShipCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Orders\nsource(output(\n\t\tEmployeeID as integer,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tTitle as string,\n\t\tTitleOfCourtesy as string,\n\t\tBirthDate as timestamp,\n\t\tHireDate as timestamp,\n\t\tAddress as string,\n\t\tCity as string,\n\t\tRegion as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tHomePhone as string,\n\t\tExtension as string,\n\t\tNotes as string,\n\t\tReportsTo as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmpLkpTable\nOrders, EmpLkpTable lookup(Orders@EmployeeID == EmpLkpTable@EmployeeID,\n\tmultiple: false,\n\tpickup: 'last',\n\tasc(EmpLkpTable@EmployeeID, true),\n\tbroadcast: 'auto')~> Lookup1\nLookup1 select(mapColumn(\n\t\tOrderID,\n\t\tCustomerID,\n\t\tEmployeeID = Orders@EmployeeID,\n\t\tOrderDate,\n\t\tRequiredDate,\n\t\tShippedDate,\n\t\tShipVia,\n\t\tFreight,\n\t\tShipName,\n\t\tShipAddress,\n\t\tShipCity,\n\t\tShipRegion,\n\t\tShipPostalCode,\n\t\tShipCountry,\n\t\tLastName,\n\t\tFirstName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable16')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable17')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable18')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_parsrc')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet5",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable33",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(output(\n\t\tSalesOrderID as integer,\n\t\tRevisionNumber as integer,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp,\n\t\tStatus as integer,\n\t\tOnlineOrderFlag as boolean,\n\t\tSalesOrderNumber as string,\n\t\tPurchaseOrderNumber as string,\n\t\tAccountNumber as string,\n\t\tCustomerID as integer,\n\t\tShipToAddressID as integer,\n\t\tBillToAddressID as integer,\n\t\tShipMethod as string,\n\t\tCreditCardApprovalCode as string,\n\t\tSubTotal as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tTotalDue as decimal(19,4),\n\t\tComment as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> source1\nsource1 derive(Year = year(OrderDate),\n\t\tMonth = month(OrderDate)) ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(CustomerID,\n\t\tYear,\n\t\tMonth),\n\tTotalSales = sum(SubTotal)) ~> Aggregate1\nAggregate1 keyGenerate(output(SID as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet5')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable33')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowcase')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable6",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tEmployeeID as integer,\n\t\tOrderDate as timestamp,\n\t\tRequiredDate as timestamp,\n\t\tShippedDate as timestamp,\n\t\tShipVia as integer,\n\t\tFreight as decimal(19,4),\n\t\tShipName as string,\n\t\tShipAddress as string,\n\t\tShipCity as string,\n\t\tShipRegion as string,\n\t\tShipPostalCode as string,\n\t\tShipCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 derive(EmpGroup = case(\r\n\r\n    EmployeeID>=1 && EmployeeID<=3,'Group1',\r\n    EmployeeID>=4 && EmployeeID<=6,'Group2',\r\n\r\n    'Group3'\r\n\r\n)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable5')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable6')]"
			]
		}
	]
}